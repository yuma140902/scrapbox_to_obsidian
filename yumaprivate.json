{"name":"yumaprivate","displayName":"Private","exported":1671935105,"pages":[
{"title":"運用方針","created":1618732635,"updated":1671874686,"id":"607be659f23125001cc34cf5","lines":["運用方針","他サービスとの使い分けはPKMサービス運用方針を参照","obsidian://open?vault=main&file=Notes%2FPKM%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E9%81%8B%E7%94%A8%E6%96%B9%E9%87%9D","","[* Obsidianへ移行予定 (2022/12/24)]","","[* タグ]","\t#plan","\t\tプラン中のもの","\t\t[- その時の気分によってToDoリストの「自主」の欄に入れられ、好きなタイミングで作業が行われる]","\t\t取り組むと決めた場合は https://github.com/yuma140902/life のissueにする","\t\t\tお互いにリンクを貼るのが望ましい","\t\t\t途中でやめる場合はcloseする","\t\t\t\t再開する場合はre-openする","\t\t\t完了した場合もcloseする","\t#fin","\t\tもともと #plan だったが、成し遂げたやつ","\t#book","\t\t本","\t#tips","\t\tTips","\t\t生活の知恵","\t#study","\t\t勉強","\t#DIY","\t\t既存のものを(勉強のために)自作するやつ",""]},
{"title":"光速で移動するコンピュータ","created":1670768739,"updated":1670768971,"id":"6395e8601c4424001e04a7c7","lines":["光速で移動するコンピュータ","#idea","","参考","\tとても強い計算量クラスのコンピュータとその実現方法 - Qiita | https://qiita.com/iKodack/items/d606a09f0a40b95bf2b6","","コンピュータを光速で移動させることにより計算時間を0にすることができる","光速で移動するものといえば光","解きたい問題を光の経路に帰着させることで計算時間0で答えを得ることができる","例) フェルマーの原理",""]},
{"title":"DXライブラリでテトリスを作る","created":1664690281,"updated":1669293155,"id":"6339286784b513001d015e30","lines":["DXライブラリでテトリスを作る","#dxlib #directx #game #ReverieEngine #fin","https://github.com/yuma140902/life/issues/76","発展"," 他のライブラリでテトリスを制作"," 「格子状の場+入力→新しい格子状の場」の形式で動作するゲーム(ぷよぷよ、将棋、ライフゲームなど)全般に使えるゲームエンジンを抽出することができる"," \t格子状の場を書き換えるルールをLuaでユーザーが書けるようにしたら楽しそう"," DXライブラリをRustに移植したらDirectXの勉強になりそう。その足がかりになる。","","参考","\tゲームつくろー！](http://marupeke296.com/GameMain.html)"," 新・C言語 ～ゲームプログラミングの館～ DXライブラリ]](https://dixq.net/g/)"," ＤＸライブラリ置き場　リファレンスページ](https://dxlib.xsrv.jp/dxfunc.html)",""]},
{"title":"tlbx - USBメモリに入れて持ち運ぶ十徳ナイフ","created":1665719556,"updated":1665719707,"id":"6348dd0268bcdf001d499f7b","lines":["tlbx - USBメモリに入れて持ち運ぶ十徳ナイフ","#plan","詳細はD:\\backup\\tlbx","D:\\backup\\secも参照","よく使うソフトのポータブル版や、隠密に活動するためのbg.vbs、notepad.lnk、プロダクトキーやwifiのパスワードを盗み出すためのツールなどを収録する",""]},
{"title":"LLC言語","created":1665399616,"updated":1665399882,"id":"6343fb3d48f3d8001dcda73e","lines":["LLC言語","#plan #language #compiler","LL(1)なC言語風の言語","","各構文に0.0～1.0の「Level」","Level0.5のコンパイラはLevel0~0.5の構文はコンパイルできるが、0.5～1の構文はコンパイル出来ない","","int a;は変数宣言である(Level0.01)","空白のソースコードは何もしないプログラムを意味する(Level0)","・・・","","みたいな",""]},
{"title":"HackerOne","created":1664690691,"updated":1664690700,"id":"63392a02f7db3d00203e2421","lines":["HackerOne","#plan #hack #security",""]},
{"title":"Stable Diffusionをファインチューニング","created":1664690640,"updated":1664690664,"id":"633929cf728f5e001d140156","lines":["Stable Diffusionをファインチューニング","#plan #ai #stablediffusion #e #study","Grokking SD 2: Texture Inversion",""]},
{"title":"Intel NUC Kit","created":1664690593,"updated":1664690621,"id":"633929a087ec7100201fb2f7","lines":["Intel NUC Kit","#plan","https://github.com/yuma140902/life/issues/77",""]},
{"title":"Hack the Box","created":1664690555,"updated":1664690563,"id":"6339297a16742e001dab687a","lines":["Hack the Box","#plan #security #hack #htb",""]},
{"title":"nu shellに乗り換える","created":1664690527,"updated":1664690530,"id":"6339295e00a6b8001d99ef5c","lines":["nu shellに乗り換える","#plan #nushell",""]},
{"title":"プログラミング言語100本ノック","created":1664690454,"updated":1664690498,"id":"63392914ed9fd700238ca2bb","lines":["プログラミング言語100本ノック","#plan #study","移動: https://github.com/yuma140902/pl100","","概要"," 世の中にはさまざまなパラダイムのプログラミング言語が存在する。それらの言語を学び色々なパラダイムを身に着けたい。","","目的"," 多数の言語の学習を通して強い人になる。","","言語の選定基準"," まだ学んだことのない言語"," 詳しくは知らない言語"," なるべくパラダイムに偏りがないように選定する","","参考"," https://ja.wikipedia.org/wiki/Template:%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%83%BB%E3%83%91%E3%83%A9%E3%83%80%E3%82%A4%E3%83%A0",""]},
{"title":"Rustlingsに取り組む","created":1664690259,"updated":1664690266,"id":"63392851f7db3d00203e191a","lines":["Rustlingsに取り組む","#plan #rust #study",""]},
{"title":"Async Rustについて学ぶ","created":1664690231,"updated":1664690247,"id":"6339282fff8e1000225d90e7","lines":["Async Rustについて学ぶ","#rust #plan #study","The Future Trait - Asynchronous Programming in Rust](https://rust-lang.github.io/async-book/02_execution/02_future.html)",""]},
{"title":"Forth処理系をRustで実装","created":1664690162,"updated":1664690194,"id":"633927f089b3e0001e06c7eb","lines":["Forth処理系をRustで実装","#plan #rust #forth #DIY #compiler","- RustとNomで電卓を作る - Qiita](https://qiita.com/elipmoc101/items/2b57eebb6627c69f59ff#式のパーサ)","- nom::character::complete - Rust](https://docs.rs/nom/7.1.1/nom/character/complete/index.html)","- プログラミング言語Forthに魅せられて。 - Qiita](https://qiita.com/t-sin/items/0bbc70570bdd57efcff8)","- Forth](https://forth-standard.org/)","妥協案としてdcの実装でもいいかも",""]},
{"title":"Vividlをフォーク","created":1664690126,"updated":1664690148,"id":"633927cd87ec7100201fa550","lines":["Vividlをフォーク","#plan #csharp #WPF","VividlはWPFで作られたyt-dlpのGUI","pueueを使えばいい気がしてきた"]},
{"title":"mmd-launcher","created":1664690070,"updated":1664690103,"id":"633927949c79e1001dd6cee0","lines":["mmd-launcher","#plan #mmd #tauri","MMDの制作に便利な、アセットの管理機能を持ったランチャーを作る",""]},
{"title":"Redoxをビルドしてみる","created":1664690033,"updated":1664690041,"id":"633927708406f0001fd40523","lines":["Redoxをビルドしてみる","#plan #redox #os #rust",""]},
{"title":"Cコンパイラ by Rust","created":1664690013,"updated":1664690020,"id":"6339275c32c0ef001d5f0b7e","lines":["Cコンパイラ by Rust","#rust #plan #DIY #compiler",""]},
{"title":"Rustでlnとmklinkを作る","created":1618733187,"updated":1664689943,"id":"607be880594994001fd361c7","lines":["Rustでlnとmklinkを作る","#rust #plan #DIY","`$ mklink a -> b`","`$ ln a <- b`",""]},
{"title":"RustでJVMを実装、WASMにコンパイル","created":1618733161,"updated":1664689928,"id":"607be85db5ca1c0020beaa4e","lines":["RustでJVMを実装、WASMにコンパイル","#rust #wasm #java #jvm #plan #DIY","ブラウザでjavaが動くようになる",".NET Core みたいな感じ",".NET CoreはWASMになっていて、ブラウザ上でexeやdllを実行する"]},
{"title":"Minecraft+工業化Modのようなゲームを作る","created":1618733297,"updated":1664689912,"id":"607be8f0dbb77a001c1b6f5e","lines":["Minecraft+工業化Modのようなゲームを作る","#minecraft #engine #rust #opengl #plan #DIY","ゲームエンジンを作ってみたい","工業系のゲームを作りたい","","2021-08-28 追記","\t#RustyCraft の開発を始めた",""]},
{"title":"ReverieEngine","created":1633704739,"updated":1664689897,"id":"61605b2049290500211dfa84","lines":["ReverieEngine","#ReverieEngine #StarryNight #rust #DIY","GitHub: https://github.com/yuma140902/starry-night","Crates.io: https://crates.io/crates/starry-night","Docs.rs: https://docs.rs/starry-night/","see also: [RustyCraft]","","[* TODO]","\tVAOのstaticとかの種類","\t`Vao`がテクスチャを自分でバインドするようにする","  `ImageManager`の管理用IDを使う"," 各種補間関数"," \tもっといろいろな種類の補間関数"," \t\t急に動き出してゆっくり止まるやつ","  \t補間関数のパラメータを指定できるようにする ←いらなくね(任意の関数を指定できるので)"," \tTime = f32以外にもTime = i32とかがほしい"," \t\t関連型？"," \tベクトル版 `Interpolation<nalgebra::Vector3<f32>>`"," \tなにもしないインスタンス `new_static`(仮称)"," クロージャのメモリ効率について調べる"," \tCompilerExplorerで調べたところ、const変数を挟んでも直接渡してもアセンブラは同じだった"," \tただし、クロージャを実行するよりも普通の関数を実行する方が処理が少ない気がした"," \t\t反例？ : Rustのゼロコスト抽象化の効果をアセンブラで確認 | https://blog.rust-jp.rs/tatsuya6502/posts/2019-12-zero-cost-abstraction/","","[* 歴史]"," ReverieEngineの歴史・開発日記 | https://gist.github.com/yuma140902/f5ea7c2630045e923be2a654183ae0d5",""]},
{"title":"RustyCraft","created":1630145793,"updated":1664689892,"id":"612a0cfd466abf00232fd903","lines":["RustyCraft","#RustyCraft #rust #DIY #ReverieEngine","GitHub"," yuma140902/RustyCraft | https://github.com/yuma140902/RustyCraft","","[* コンセプト]","\tMinecraft+工業化MODのようなゲーム","[* 目的]","\tOpenGLの勉強","\tゲームエンジンの自作","\tECSの勉強","\tその他ゲームに関わる数学の勉強","","[* リンク集]","\tyuma140902/RustyCraft | https://github.com/yuma140902/RustyCraft","\tゲームつくろー！ | http://marupeke296.com/GameMain.html","\tIntroduction - The Specs Book | https://specs.amethyst.rs/docs/tutorials/","\tParry collision-detection library | Parry | https://parry.rs/","\tAbout nalgebra | nalgebra | https://www.nalgebra.org/docs/","途中のやつ","\tPoints and transformations | nalgebra | https://www.nalgebra.org/docs/user_guide/points_and_transformations/","\t\tこのページの途中まで読んだ","\tStorages - The Specs Book | https://specs.amethyst.rs/docs/tutorials/05_storages.html","\t\tこのページの始めから再開すべし","\tRust and OpenGL from scratch - Colored Triangle | https://nercury.github.io/rust/opengl/tutorial/2018/02/11/opengl-in-rust-from-scratch-05-triangle-colors.html","\t\tこのページの最後までやった","\tLearnOpenGL - Shaders | https://learnopengl.com/Getting-started/Shaders","\t\tこのページの始めから再開すべし","","[* TODOリスト]","\tフォントの描画","\tGUIの描画","\t\tレティクル","\tSpecsのドキュメントをよく読んでComponentのStorageを見直す","\t\tIntroduction - The Specs Book | https://specs.amethyst.rs/docs/tutorials/","\tnalgebraのドキュメントを読む","\t\tAbout nalgebra | nalgebra | https://www.nalgebra.org/docs/","\tParryはチュートリアルがほぼ無い...","\tいろいろな形のブロック","\tブロックなどのデータを外部ファイルで持つ","\tブロックのSelection Boxの描画","\tF6キーでゲームモードを切り替えられるように","\tポーズ画面","\tタイトル画面","\tブロックの面のCulling","\tブロックの設置、破壊","\tメインループの中の処理の順番を読みやすくする(リーダブルコードのデフラグ)","\tループ内で呼び出される関数などでの、不要な構造体の生成をなくす(newを減らす)","\t真上・真下を見たときの移動がおかしい","\tジャンプ","\t\t[- VelocityControllerで毎回Velocityをリセットしているせいで等加速度運動ができない]","\t\t`OnGround`[- フラグを追加]","\t\tジャンプの高さが一定でない `feature/precise-jump`","\t高速でブロックに衝突したときの挙動がおかしい","\t\t手前で一旦止まったあと、少し奥に進む","\t\t手前と奥、どちらが正しい当たり判定の位置なのかわからない","\t\t\t前者の位置が正しいとすると、壁に張り付いた状態で壁方向に進もうとすると、壁に少しめり込むという症状","\t\t\t後者の位置が正しいとすると、速度ベクトルが伸びすぎていてズレが生じている","\tECSを自分で実装","\t オプションのタプルをタプルのオプションへ","\t  `.join()`に使う","\t  標準機能にないなら自分で実装","\t   ブログ","\t    impl Foo for Barの名前","\t Iterator","\t  `.join()`に使う","\t マクロ","\t  エンティティビルダーなど細かいところから活用していきたい","","[* 完了済みTODOリスト]","\t立方体を表示","\t立方体にテクスチャをつける","\tブロックを好きな位置に配置できる","\t視点を自由に動かせる","\tF1でImGui非表示","\tESCでポーズ","\t重力","\t[プレイヤーとブロックの当たり判定]","\tブロックをたまにすり抜けてしまう","\t`Force`コンポーネントを削除","\tカーソルを非表示にする","",""]},
{"title":"RustyBox","created":1635484130,"updated":1664689865,"id":"617b81e0bb798e001dc5185c","lines":["RustyBox","#plan #rust #DIY","BusyBoxをRustで実装してみる",""]},
{"title":"The Art of Computer Programming","created":1664358858,"updated":1664689804,"id":"633419c8c4712c0023af763a","lines":["The Art of Computer Programming","#plan #book #study","TAOCPに取り組む",""]},
{"title":"Open Data Structures","created":1664358819,"updated":1664689796,"id":"633419a192089e001dcd404b","lines":["Open Data Structures ","#plan #book #study","Open Data Structures という本に取り組む","https://github.com/yuma140902/life/issues/6",""]},
{"title":"東大のPython AI教材に取り組む","created":1664689759,"updated":1664689777,"id":"63392650f8cc02001f76b58c","lines":["東大のPython AI教材に取り組む","#plan #study #AI #pyhon",""]},
{"title":"バージョン管理システムを自作","created":1664689729,"updated":1664689743,"id":"6339261dfc339b0020d6406d","lines":["バージョン管理システムを自作","#plan #git #DIY",""]},
{"title":"TauriでWhiteBrowserのクローンを制作","created":1664689684,"updated":1664689691,"id":"6339260bb72b41001d2be996","lines":["TauriでWhiteBrowserのクローンを制作","#plan #tauri",""]},
{"title":"アキバホビーでCDを2枚位同時に買っても良い","created":1664414086,"updated":1664414136,"id":"6334f1801b50e6001f198504","lines":["アキバホビーでCDを2枚位同時に買っても良い","#tips","アキバホビーはポスト投函なので、アパートのポストに入るかどうか心配で1枚ずつ買っていたが、2枚同時に買っても大丈夫そうであることがわかった。",""]},
{"title":"代入文を持たないオブジェクト指向言語","created":1664361930,"updated":1664362068,"id":"633425c6a681b5001d0a8dc8","lines":["代入文を持たないオブジェクト指向言語","#plan","既存のオブジェクト指向言語はほぼすべて手続き型とのマルチパラダイムである","大山口・三橋『コンパイラの理論と作成技法』によれば、手続き型とは代入操作を基本とする言語である","したがって、代入文を廃し、オブジェクト間のメッセージパッシングのみを行う言語は、マルチパラダイムではない純粋なオブジェクト指向言語となるはずである",""]},
{"title":"md2ooxml","created":1664359030,"updated":1664359039,"id":"63341a742be361001d8a221a","lines":["md2ooxml ","#plan","https://github.com/yuma140902/life/issues/56",""]},
{"title":"Blinder - Windows用のぺージャー","created":1664358942,"updated":1664358973,"id":"63341a1b1b50e6001f11280b","lines":["Blinder - Windows用のぺージャー","#plan","lessとかmoreみたいな","https://github.com/yuma140902/life/issues/59",""]},
{"title":"OSD-013 Touhou Works Index","created":1664358668,"updated":1664358845,"id":"6334190a48d2c9001df39a3b","lines":["OSD-013 Touhou Works Index","#plan #osd",""]},
{"title":"ShineDOS","created":1664358186,"updated":1664358208,"id":"633417274b62860022918ea4","lines":["ShineDOS","#plan #dos #os","DOSを自作する機会があればこの名前を使いたい",""]},
{"title":"理想の画像ビューアを自分で作る","created":1618733240,"updated":1650729346,"id":"607be8b766de6a0021d402b1","lines":["理想の画像ビューアを自分で作る","#plan","ビューアーと検索機能は別のプログラムとして実装しても良いかも","さらに、検索そのものと検索結果表示を別プログラムにしても良いかも"," ビューアー","  画像とそのメタデータをいい感じに表示する","  漫画形式"," 検索","  danbooru みたいな","  WhiteBrowser みたいな",""]},
{"title":"Beatのジャンプ処理、Undertaleのパピルスのステージみたいにする","created":1643697572,"updated":1643697642,"id":"61f8d59d90d8b6001d39f694","lines":["Beatのジャンプ処理、Undertaleのパピルスのステージみたいにする","#Beat","ボタンを長押しした時間に応じて3段階(Beatなら2段階)の高さのジャンプ","ジャンプが高いなら障害物はゆっくり動く。重力は同じ",""]},
{"title":"録音された人間の音声にノイズをのせる","created":1643243852,"updated":1643244034,"id":"61f1e943c06cbb001d45d558","lines":["録音された人間の音声にノイズをのせる","#plan","","録音された人間の音声は毎回全く同じように再生される。そのため何度も繰り返し聞くと違和感を覚えるようになってしまう。音声に対して適切にノイズをのせることでこの問題点を回避できると考えられる。","","ノイズ","\t雑多なノイズでは意味がない","\t\t環境音のようになってしまう","\t人間の声の特定の周波数成分だけを変える","\t\t音の大小や高低を変える","\t\tフーリエ解析を利用する","\t\t\tフーリエ解析用のライブラリ？","\t\t\t",""]},
{"title":"「姫虫百々世=赤城山の神」説","created":1643179702,"updated":1643185160,"id":"61f0eeb140f5830021daf393","lines":["「姫虫百々世=赤城山の神」説","#東方"," 赤城山の神は大ムカデになって日光の神と戦ったという伝承がある"," 赤城山には竜神がいる"," 赤城姫の伝承","移動: https://github.com/yuma140902/Blog/blob/master/_posts/2022-01-26-momoyo.md","",""]},
{"title":"FFmpeg better CLI","created":1642495302,"updated":1642495434,"id":"61e67d439d1cef001ec246c7","lines":["FFmpeg better CLI","#plan #rust","[FFmpeg]のオプションは難解なので、GNUスタイルでわかりやすく指定できるようなFFmpegのラッパーを作りたい。","","または、FFmpegを操作するためのDSLを設計・開発したい。","","最終的に、FFmpegで簡単な動画編集、あわよくば複雑な動画編集も手軽にできるようにしたい。",""]},
{"title":"C/C++のRustバインダ","created":1640223384,"updated":1640223472,"id":"61c3d29099d7130020db4115","lines":["C/C++のRustバインダ","#rust #plan","","任意のC/C++ライブラリをRustにバインドするプログラム",""]},
{"title":"グラフ理論的なTODOリスト","created":1635292829,"updated":1635293638,"id":"61789694a41f76001d884381","lines":["グラフ理論的なTODOリスト","#plan","","それぞれのタスクについて、そのタスクに取り組む前に完了させておく必要のあるタスクを指定する","そうすると、npmなどのパッケージマネージャが依存関係を解決するように、タスクに取り組むべき順序を示してくれる","","啓示","\tこのツールが、タスクに取り組むべき順序を示すことを啓示と呼ぶことにする","","タスクのもつ属性","\t依存関係","\t\tそのタスクに取り組む前に完了させておく必要のあるタスクたち","\t\tnpmなどのパッケージマネージャが依存関係を解決するように、タスクに取り組むべき順序を示してくれる","\tかかる時間","\t\tタスクを開始してから完了するまでにかかると予想される時間","\t期限","\t\t「かかる時間」と合わせて、期限に間に合うように啓示してくれる","\t☆1～☆5の「重要度」","\t\t取り組むべき順序が同じだった場合は「重要度」が高いものが先に示される"," 「苦痛度(あるいは楽しさ)」"," \t「苦痛度」の高いタスクが連続しないように配慮してくれる","","ツールが全知の神ではないために生じる問題とその応急処置"," 雨が降っていると着手できない、特定の時間帯でないと実行不能など、このツールが把握していない条件のために、啓示の通りにタスクを実行できないこともある","  その場合に備えて、啓示の順序でタスクを完了させる必要はなく、普通のTODOリストのように任意のタスクを完了させられるようにしておく",""]},
{"title":"ReverieManager","created":1630797140,"updated":1630798755,"id":"6133fd50982723001f1a21f5","lines":["ReverieManager","#ReverieManager #ReverieIllustrations","","[* 完了済みTODO]"," ドッキングウィンドウ"," ドッキングウィンドウのレイアウトを復元 (AvalonDockMvvmLib)","","[* TODO]"," AvalonDockMvvmLib をリファクタリング"," 画像ファイルの非同期読み込み"," 画像ファイルからOCRでテキストデータを取得"," Saucenao などで画像ファイルの情報や高画質版を取得"," タグをデータベースなどに保存"," 画像のメタデータを表示"," 画像のメタデータを編集"," 画像のメタデータを保存"," 検索機能"," 5段階評価のUI",""]},
{"title":"プレイヤーとブロックの当たり判定","created":1630145582,"updated":1630146512,"id":"612a0c2470f2e8001dc46a38","lines":["プレイヤーとブロックの当たり判定","#RustyCraft","Minecraft 1.16.5の","\tEntity#adjustMovementForCollisions() ←3種類ある","\tCollisionViewクラス","などを参考にしよう","","その５　反射ベクトルと壁ずりベクトル | http://marupeke296.com/COL_Basic_No5_WallVector.html",""]},
{"title":"秘封倶楽部 ss案","created":1625911378,"updated":1630145729,"id":"60e9704af06e3700224f8f0e","lines":["秘封倶楽部 ss案","","メリーは紫外領域の光が少し見えるので実験のときに重宝される","←メリーは文系だろ","←あの時代に文系とかあるの？",""]},
{"title":"s4pear","created":1618733485,"updated":1630145669,"id":"607be9abaa8ced001c8f8aee","lines":["s4pear","#s4 #plan","s4 Private Environment Arranger - ","Linuxの環境をgithubなどに置いておいて、それを元に「いつもの環境」を1コマンドで準備するプログラム","","s4 Pear 仕様 | https://gist.github.com/yuma140902/37dbaa56e8078f70877b7ddf0dcdd9ab",""]},
{"title":"夏休みやりたいこと","created":1627566493,"updated":1627566730,"id":"6102b192970e43001cce74a0","lines":["夏休みやりたいこと","#plan","注：[* ここには楽しいことだけ書くこと]","","DailyMissions作る","MMD"," 3Dモデリング","UpToDateMod","みかん本","AviUtl","授業の予習っぽいこと"," Coq",""]},
{"title":"日記","created":1625721673,"updated":1626686861,"id":"60e68b45bcc6b0001e4ad394","lines":["日記","2021年7月8日","\t2021年7月8日14時21分、第一次黴戦争に勝利。3時間以上に渡る戦いは幕を閉じた。"," \t大量の戦争廃棄物が発生した。明日ゴミの日で良かった。"," \t今後しばらくは敵の残党狩りが必要と思われる。"," \t戦闘が行われた場所は木製の棚3つと扉1つ。棚の中に入れておいた紙束の一部が犠牲になった。","","2021年7月19日","\t数学4Aの期末テスト","\t\t過去問と出題内容が一部異なり、また、自分のミスも多かったので成績は期待できない。","",""]},
{"title":"スマホアプリ: デイリーミッション (Daily Missions)","created":1626083159,"updated":1626084632,"id":"60ec0f54419c94001cf97f71","lines":["スマホアプリ: デイリーミッション (Daily Missions)","#plan #app4biz","","コンセプト","\t毎日行うタスクをソシャゲのデイリーミッションのような形で楽しく達成できるアプリ","","アイデア","\tユーザが毎日行うタスクを登録","\tタスクを達成すると報酬として「きれいな石」がもらえる","\t「きれいな石」の量はタスク登録時にユーザが決める","\tタスクの達成は自己申告。監視機能などは付けない","\t毎日だけではなく、毎週やn日ごとといった間隔にも対応","\t一日に何回でも達成できるタスク","\t臨時ミッションのような形で通常のタスクも追加できるようにする？","\t\t普通のタスク管理アプリとの差別化のためにこの機能は無いほうが良いかもしれない","","","開発のロードマップ","","Phase 0.0 (2021年7月12日～　)","\tアナログの紙","\tコンセプトが意義のあるものであることを確認する","","Phase 1.0","\t自分だけがPCだけで使う","\tWPFなどで実装","\tコンセプトをアプリとして実装することで、紙に手書きで管理するより便利であることを確認する","","Phase 1.1","\t自分だけがスマホ(Android)だけで使う","\tReact Nativeなどを使って実装","\tインターネット接続なしで、端末だけで完結させる","\tスマホアプリを作ったことが無いので、スマホアプリ開発の技術を身につけることを優先し、ネット関係のことは後回しにする","","Phase 1.2","\t自分だけがスマホとPCから使う","\tタスクのデータはサーバ上に格納","\tインターフェイスとしてWeb、デスクトップアプリ、スマホアプリを用意","\tデスクトップアプリはWindows, macOS(, Linux)またはWindowsのみ","\tスマホアプリはAndroidとiOS","\t\tmacを持っていないのでiOSアプリ開発ができない？","\t\tおそらくReact Nativeなどを用いればとりあえず実装することはできる","\t\t\tiOSでの動作確認は不十分になる","\t実装案"," \tデスクトップアプリ"," \t\tWPF"," \t\tElectron"," \tスマホアプリ"," \t\tReact Native"," \tWebアプリとして実装して全部PWAにするのもあり","","Phase 2.0","\t概念実証","\t複数ユーザに対応させる","\t一般公開はしない","","Phase 3.0","\t一般公開",""]},
{"title":"High and Low をRustで実装","created":1622688601,"updated":1622688607,"id":"60b84355a31b2b0023837846","lines":["High and Low をRustで実装","#plan",""]},
{"title":"競技プログラミング","created":1619333200,"updated":1619333352,"id":"6085104b5a0694001ec6b0e2","lines":["競技プログラミング","#plan","\tアリ本で勉強","\tAHC002",""]},
{"title":"Omnifactory","created":1619333180,"updated":1619333330,"id":"6085103a6c5600001ce99a5e","lines":["Omnifactory","#plan","\tOmnifactoryのMODをまとめる","\tOmnifactoryをプレイ",""]},
{"title":"凋叶棕「屠」の「幽明境を分かつこと」の歌詞チェック","created":1619333237,"updated":1619333253,"id":"60851074142d31001c26ef60","lines":["凋叶棕「屠」の「幽明境を分かつこと」の歌詞チェック","#東方 #plan #凋叶棕","","英語訳を参照する",""]},
{"title":"印刷して書き込んだ授業プリントをスキャン","created":1619333223,"updated":1619333225,"id":"60851066d213ed001fae2ee6","lines":["印刷して書き込んだ授業プリントをスキャン","#plan",""]},
{"title":"Javaの資格","created":1619333156,"updated":1619333160,"id":"608510225f4f2a002329af31","lines":["Javaの資格","#plan #java",""]},
{"title":"東方のプログラムを解析","created":1619332523,"updated":1619333141,"id":"60850da80f3828001ef26032","lines":["東方のプログラムを解析","#plan #東方",""]},
{"title":"東方のセリフをまとめる","created":1619333126,"updated":1619333133,"id":"608510045dd6990022fa4c8a","lines":["東方のセリフをまとめる","#plan #東方",""]},
{"title":"囚人のジレンマのモデルをプログラムで作って実験してみる","created":1619333111,"updated":1619333113,"id":"60850ff598b6db001c20a5f8","lines":["囚人のジレンマのモデルをプログラムで作って実験してみる","#plan",""]},
{"title":"Githubの授業ノートをScrapboxに移す","created":1619333063,"updated":1619333073,"id":"60850fc45a0694001ec6b0da","lines":["Githubの授業ノートをScrapboxに移す","#plan",""]},
{"title":"被差別部落について調べる","created":1619333042,"updated":1619333053,"id":"60850faea0e6330022fd6e95","lines":["被差別部落について調べる","#plan #民俗",""]},
{"title":"RNCalc - React Native で電卓アプリを作る","created":1619332994,"updated":1619333010,"id":"60850f7f06d104001c847b8e","lines":["RNCalc - React Native で電卓アプリを作る","#app4biz #plan",""]},
{"title":"AWS Cloud Practitioner","created":1619332158,"updated":1619332860,"id":"60850c3c9d08850023d479d3","lines":["AWS Cloud Practitioner","#app4biz #aws #plan","アマゾンがやっている資格。基礎的な知識を身につけるのには役立ちそう。","","無料のトレーニング AWS Cloud Practitioner Essentials"," https://www.aws.training/Details/eLearning?id=66479",""]},
{"title":"BrainDeck - An IDE for Brainf*ck]","created":1618733580,"updated":1619332828,"id":"607bea0b66eaa9001c55af43","lines":["BrainDeck - An IDE for Brainf*ck]","Brainf*ck用のIDE BrainDeck",""]},
{"title":"独自のDanbooruインスタンス","created":1618733651,"updated":1619332820,"id":"607bea4e6010040020aeabad","lines":["独自のDanbooruインスタンス","#plan","自分の持っている画像を管理する",""]},
{"title":"スマホアプリの作り方を学ぼう！","created":1618733923,"updated":1619332800,"id":"607beb5d5adc590023779d55","lines":["スマホアプリの作り方を学ぼう！","#app4biz #plan","スマホアプリの種類","\tWebアプリ","\tネイティブアプリ","\tハイブリッドアプリ","\t\tネイティブアプリとしてWebViewだけを持ち、その中でWebアプリが動く","開発言語・iPhone","\tObjective-C","\tSwift","開発言語・Android","\tJava","\tKotlin","","クロスプラットフォーム","\tiOSアプリはリリース時にMacが必須であることに留意されたい","\tXamarin","\t\tVisual Studio, C#","\t\tXAML","\t\tWebは対応していない","\tUno Platform","\t\t[https://scrapbox.io/files/607bf377868e5d001c8713e3.png]","\t\tC# + XAML","\t\tAndroid, iOS, Web, Windows10","\t\tUWPベース","\tReact Native","\t\tReactと同じ感じで開発できるらしい","\t\tJSX, JS, CSS","\t\tTypeScript","\t\tネイティブ","\tCordova","\t\tHTML+CSS+JS","\t\tWebViewベース","\tTitanium Mobile","\t\tJS","\t\tWebViewベース","\tゲーム"," \tUnity"," \tCocos2d-x"," \t\tC++","","Uno Platform か React Native が良さげ","Uno Platform","\tVisual Studio, C# が使える","\t中学生以来Visual Studioで開発し続けた経験を活かしやすい","React Native","\tWeb系の技術を学ぶ良い機会となる","\t将来安泰","どっちにしよう…","[* 両方やればいいじゃないか！！！！！！！！！！！！！！！！！！！！！！！！！！！]","両方やってみて気に入ったほうで製品開発しよう","[Uno Platform と React Native を両方使ってみる]","[Uno Platform を使ってみる]","[React Native を使ってみる]",""]},
{"title":"少女終末旅行 文字解読","created":1619332491,"updated":1619332783,"id":"60850d871f20e8001cbc89be","lines":["少女終末旅行 文字解読","#少女終末旅行 #plan","",""]},
{"title":"ロシア語","created":1619332420,"updated":1619332774,"id":"60850d4278ae9b001c544b30","lines":["ロシア語","#plan #ロシア語","","やってみたいこと","\tロシア語の単語帳を作る","\tロシア語の筆記体を学ぶ","\tロシア語の文字を整理",""]},
{"title":"理想の音楽管理ソフトを自分でつくる","created":1619332746,"updated":1619332759,"id":"60850e88c2f60b001cb03435","lines":["理想の音楽管理ソフトを自分でつくる","#plan",""]},
{"title":"Linuxカーネルのソースコードを読みたい","created":1619332324,"updated":1619332723,"id":"60850ce2eaeec7001ce66ea3","lines":["Linuxカーネルのソースコードを読みたい","#plan #linux",""]},
{"title":"青空文庫のtxtファイルをmobi, zbfなどに変換するソフト","created":1618733523,"updated":1619332711,"id":"607be9d2f23125001cc350e1","lines":["青空文庫のtxtファイルをmobi, zbfなどに変換するソフト","#plan",""]},
{"title":"Webページにマーカーを引くFirefox アドオン","created":1618733454,"updated":1619332702,"id":"607be98d66eaa9001c55ae38","lines":["Webページにマーカーを引くFirefox アドオン","#plan","類似","\t古いfirefoxのアドオン 名前は忘れたがウェブページに引ける消えないマーカーみたいなキャッチコピーだった","","LINERというiOSのアプリがある",""]},
{"title":"DataPackビルダー","created":1618733427,"updated":1619332697,"id":"607be972de282500222e0e98","lines":["DataPackビルダー","#minecraft #java #plan","Java、DSL、あるいはなんらかのスクリプト言語で書かれたファイル群をデータパックに変換する。マイクラのバージョン間の差異も吸収する。",""]},
{"title":"s4FileManager","created":1618733394,"updated":1619332690,"id":"607be951e0f83b001edc75e0","lines":["s4FileManager","#s4 #plan","","コンソールで動作するファイル管理ソフト","タブ、二画面表示などができ、vimのようなキーバインド",""]},
{"title":"リソースパック OreUnify・OreUnifyGenerator","created":1618733369,"updated":1619332682,"id":"607be93806526000222e383b","lines":["リソースパック OreUnify・OreUnifyGenerator","#minecraft #plan",""]},
{"title":"AviUtlのプラグイン管理ソフト; MultiMCみたいな","created":1618733332,"updated":1619332675,"id":"607be913c33007001ca4b70e","lines":["AviUtlのプラグイン管理ソフト; MultiMCみたいな","#plan","AviUtlのバージョン管理、インストール、プラグイン管理、プラグインリポジトリのソフト。MultiMCみたいな",""]},
{"title":"MeryのMarkdown用のプラグインを作る","created":1618733269,"updated":1619332661,"id":"607be8d46690c30020bcb10a","lines":["MeryのMarkdown用のプラグインを作る","#plan","https://github.com/haijinboys/mery-plugin-sdk"]},
{"title":"時限式ゴミ箱","created":1618733252,"updated":1619332586,"id":"607be8c36690c30020bcb0f1","lines":["時限式ゴミ箱","#plan","指定した日時になったらファイルを削除するソフト",""]},
{"title":"バックエンド","created":1618735000,"updated":1619332201,"id":"607bef948bcf34001ca18bde","lines":["バックエンド","#app4biz","Firebase","さくらのVPS","\tVPS … 仮想専用サーバー","AWS","\t大規模・多機能","\t[AWS Cloud Practitioner]",""]},
{"title":"光熱費 3/27 ～ 4月","created":1619233398,"updated":1619233745,"id":"60838a724b4db8001c385327","lines":["光熱費 3/27 ～ 4月","#生活 #光熱費","水道 1562円 (3m^3 / 17日)","電気 1597円 (46kWh / 23日)","ガス 1260円 (5m^3 / 23日)",""]},
{"title":"React Native を使ってみる","created":1618737026,"updated":1618793847,"id":"607bf780a316cb001caf1a4b","lines":["React Native を使ってみる","#app4biz","[Uno Platform と React Native を両方使ってみる]","","ドキュメント","\thttps://reactnative.dev/docs/getting-started","","Expoというフレームワーク(？)を使っていく","","感想(まだ使用中)","\t良い点","\t\tドキュメントが丁寧。モバイル開発の経験がなくても読める",""]},
{"title":"Uno Platform を使ってみる","created":1618736986,"updated":1618790452,"id":"607bf7545cc8ec0022768ff3","lines":["Uno Platform を使ってみる","#app4biz","[Uno Platform と React Native を両方使ってみる]","","プレイグラウンド"," https://playground.platform.uno/"," ブラウザで試せる","ドキュメント","\thttps://platform.uno/docs/articles/intro.html","","感想","\t良かった点","\t\tVisual Studioが使える","\t\tホットリロードが高速だった","\t\t自分のスキルが活かせる","\t悪かった点","\t\tAndroidエミュレータが重すぎて動かなかった","\t\tXAMLの編集画面で変なワーニングがでる","\t\tXAMLの編集画面でプレビュー表示できない",""]},
{"title":"Uno Platform と React Native を両方使ってみる","created":1618737751,"updated":1618737832,"id":"607bfa56e868b7001c00615c","lines":["Uno Platform と React Native を両方使ってみる","#app4biz","[Uno Platform を使ってみる]","[React Native を使ってみる]","","まず電卓アプリを作ってみよう","\t今使っているスマホには電卓アプリが入っていないため",""]},
{"title":"一般的な開発の流れ","created":1618734692,"updated":1618734902,"id":"607bee6223662b001d250e3e","lines":["一般的な開発の流れ","#app4biz","要件定義","\tもっとも重要らしい","基本設計","\tGUIデザインや機能の骨格を決める","詳細設計","\t内部の仕様、技術スタックを決める？","コーディング","\t実装","テスト・リリース","","個人開発の場合の例","\tアイデア・企画・設計","\t開発","\tリリース",""]}
]}